[{"/home/kariman/Documents/nodejs projects/ecommerce/client/src/index.js":"1","/home/kariman/Documents/nodejs projects/ecommerce/client/src/App.jsx":"2","/home/kariman/Documents/nodejs projects/ecommerce/client/src/components/Navbar.jsx":"3","/home/kariman/Documents/nodejs projects/ecommerce/client/src/pages/Home.js":"4","/home/kariman/Documents/nodejs projects/ecommerce/client/src/components/Announcement.jsx":"5","/home/kariman/Documents/nodejs projects/ecommerce/client/src/components/Slider.jsx":"6","/home/kariman/Documents/nodejs projects/ecommerce/client/src/data.js":"7","/home/kariman/Documents/nodejs projects/ecommerce/client/src/components/Categories.jsx":"8","/home/kariman/Documents/nodejs projects/ecommerce/client/src/components/CategoryItem.jsx":"9","/home/kariman/Documents/nodejs projects/ecommerce/client/src/components/Products.jsx":"10","/home/kariman/Documents/nodejs projects/ecommerce/client/src/components/ProductItem.jsx":"11","/home/kariman/Documents/nodejs projects/ecommerce/client/src/components/Newsletter.jsx":"12","/home/kariman/Documents/nodejs projects/ecommerce/client/src/components/Footer.jsx":"13","/home/kariman/Documents/nodejs projects/ecommerce/client/src/pages/ProductList.jsx":"14","/home/kariman/Documents/nodejs projects/ecommerce/client/src/pages/Product.jsx":"15","/home/kariman/Documents/nodejs projects/ecommerce/client/src/pages/Register.jsx":"16","/home/kariman/Documents/nodejs projects/ecommerce/client/src/pages/Login.jsx":"17","/home/kariman/Documents/nodejs projects/ecommerce/client/src/pages/Cart.jsx":"18","/home/kariman/Documents/nodejs projects/ecommerce/client/src/services/requestMethods.js":"19","/home/kariman/Documents/nodejs projects/ecommerce/client/src/redux/store.js":"20","/home/kariman/Documents/nodejs projects/ecommerce/client/src/redux/cartRedux.js":"21","/home/kariman/Documents/nodejs projects/ecommerce/client/src/pages/Success.jsx":"22","/home/kariman/Documents/nodejs projects/ecommerce/client/src/redux/userRedux.js":"23"},{"size":270,"mtime":1635644175982,"results":"24","hashOfConfig":"25"},{"size":1081,"mtime":1635721204783,"results":"26","hashOfConfig":"25"},{"size":1945,"mtime":1635645413567,"results":"27","hashOfConfig":"25"},{"size":575,"mtime":1634708539346,"results":"28","hashOfConfig":"25"},{"size":374,"mtime":1634688380871,"results":"29","hashOfConfig":"25"},{"size":2562,"mtime":1634701002518,"results":"30","hashOfConfig":"25"},{"size":2421,"mtime":1635449711063,"results":"31","hashOfConfig":"25"},{"size":443,"mtime":1634700773780,"results":"32","hashOfConfig":"25"},{"size":979,"mtime":1635450035921,"results":"33","hashOfConfig":"25"},{"size":1826,"mtime":1635503689415,"results":"34","hashOfConfig":"25"},{"size":1689,"mtime":1635625102800,"results":"35","hashOfConfig":"25"},{"size":1216,"mtime":1634708186974,"results":"36","hashOfConfig":"25"},{"size":3002,"mtime":1634708611258,"results":"37","hashOfConfig":"25"},{"size":2450,"mtime":1635625092991,"results":"38","hashOfConfig":"25"},{"size":4606,"mtime":1635645155882,"results":"39","hashOfConfig":"25"},{"size":1653,"mtime":1634778320049,"results":"40","hashOfConfig":"25"},{"size":1456,"mtime":1634778683614,"results":"41","hashOfConfig":"25"},{"size":6580,"mtime":1636163473580,"results":"42","hashOfConfig":"25"},{"size":454,"mtime":1636162479153,"results":"43","hashOfConfig":"25"},{"size":239,"mtime":1636163965005,"results":"44","hashOfConfig":"25"},{"size":499,"mtime":1635645219897,"results":"45","hashOfConfig":"25"},{"size":116,"mtime":1635721069925,"results":"46","hashOfConfig":"25"},{"size":601,"mtime":1636164044864,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"2oboqc",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kariman/Documents/nodejs projects/ecommerce/client/src/index.js",[],["99","100"],"/home/kariman/Documents/nodejs projects/ecommerce/client/src/App.jsx",[],"/home/kariman/Documents/nodejs projects/ecommerce/client/src/components/Navbar.jsx",[],"/home/kariman/Documents/nodejs projects/ecommerce/client/src/pages/Home.js",[],"/home/kariman/Documents/nodejs projects/ecommerce/client/src/components/Announcement.jsx",[],"/home/kariman/Documents/nodejs projects/ecommerce/client/src/components/Slider.jsx",["101","102","103","104"],"import { ArrowLeftOutlined, ArrowRightOutlined } from \"@material-ui/icons\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { sliderItems } from \"../data\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  position: relative;\n  overflow: hidden;\n`;\n\nconst Arrow = styled.div`\n  width: 50px;\n  height: 50px;\n  background-color: #fff7f7;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: ${(props) => props.direction == \"left\" && \"10px\"};\n  right: ${(props) => props.direction == \"right\" && \"10px\"};\n  margin: auto;\n  cursor: pointer;\n  opacity: 0.5;\n  z-index: 2;\n`;\n\nconst Wrapper = styled.div`\n  height: 100%;\n  display: flex;\n  transition: all 1.5s ease;\n  transform: translateX(${(props) => props.slideIndex * -100}vw);\n`;\n\nconst Slide = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  background-color: #${(props) => props.bg};\n`;\n\nconst ImageContainer = styled.div`\n  height: 100%;\n  flex: 1;\n  line-height: 2;\n`;\n\nconst Image = styled.img`\n  height: 80%;\n`;\n\nconst InfoContainer = styled.div`\n  flex: 1;\n  padding: 50px;\n`;\n\nconst Title = styled.h1`\n  font-size: 70px;\n`;\nconst Desc = styled.p`\n  margin: 50px 0px;\n  font-size: 20px;\n  font-weight: 500;\n  letter-spacing: 3px;\n`;\nconst Button = styled.button`\n  padding: 10px;\n  font-size: 20px;\n  background-color: transparent;\n  cursor: pointer;\n`;\n\nfunction Slider() {\n  const [slideIndex, setSlideIndex] = useState(0);\n\n  const handleClick = (direction) => {\n    if (direction == \"left\") {\n      setSlideIndex(slideIndex > 0 ? slideIndex - 1 : 2);\n    }\n\n    if (direction == \"right\") {\n      setSlideIndex(slideIndex < 2 ? slideIndex + 1 : 0);\n    }\n  };\n\n  return (\n    <Container>\n      <Arrow direction=\"left\" onClick={() => handleClick(\"left\")}>\n        <ArrowLeftOutlined />\n      </Arrow>\n      <Wrapper slideIndex={slideIndex}>\n        {sliderItems.map((item) => (\n          <Slide bg={item.bg} key={item.id}>\n            <ImageContainer>\n              <Image src={item.img} />\n            </ImageContainer>\n            <InfoContainer>\n              <Title>{item.title}</Title>\n              <Desc>{item.desc}</Desc>\n              <Button>SHOW NOW</Button>\n            </InfoContainer>\n          </Slide>\n        ))}\n      </Wrapper>\n\n      <Arrow direction=\"right\" onClick={() => handleClick(\"right\")}>\n        <ArrowRightOutlined />\n      </Arrow>\n    </Container>\n  );\n}\n\nexport default Slider;\n","/home/kariman/Documents/nodejs projects/ecommerce/client/src/data.js",[],"/home/kariman/Documents/nodejs projects/ecommerce/client/src/components/Categories.jsx",[],"/home/kariman/Documents/nodejs projects/ecommerce/client/src/components/CategoryItem.jsx",[],"/home/kariman/Documents/nodejs projects/ecommerce/client/src/components/Products.jsx",["105"],"import styled from \"styled-components\";\nimport { popularProducts } from \"../data\";\nimport ProductItem from \"./ProductItem\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst Container = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`;\n\nfunction Products({ cat, filters, sort }) {\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n\n  useEffect(() => {\n    const getProducts = async () => {\n      console.log(cat);\n      try {\n        const res = await axios.get(\n          cat\n            ? `http://localhost:5500/api/products?category=${cat}`\n            : \"http://localhost:5500/api/products\"\n        );\n\n        setProducts(res.data);\n      } catch (error) {}\n    };\n    getProducts();\n  }, [cat]);\n\n  useEffect(() => {\n    cat &&\n      setFilteredProducts(\n        products.filter((item) =>\n          Object.entries(filters).every(([key, value]) =>\n            item[key].includes(value)\n          )\n        )\n      );\n  }, [cat, filters, products]);\n\n  useEffect(() => {\n    if (sort === \"newest\") {\n      setFilteredProducts((prev) =>\n        [...prev].sort((a, b) => a.createdAt - b.createdAt)\n      );\n    } else if (sort === \"asc\") {\n      setFilteredProducts((prev) =>\n        [...prev].sort((a, b) => a.price - b.price)\n      );\n    } else {\n      setFilteredProducts((prev) =>\n        [...prev].sort((a, b) => b.price - a.price)\n      );\n    }\n  }, [sort]);\n\n  return (\n    <Container>\n      {cat\n        ? filteredProducts.map((item) => (\n            <ProductItem item={item} key={item.id} />\n          ))\n        : products\n            .slice(0, 8)\n            .map((item) => <ProductItem item={item} key={item.id} />)}\n    </Container>\n  );\n}\n\nexport default Products;\n","/home/kariman/Documents/nodejs projects/ecommerce/client/src/components/ProductItem.jsx",[],"/home/kariman/Documents/nodejs projects/ecommerce/client/src/components/Newsletter.jsx",[],"/home/kariman/Documents/nodejs projects/ecommerce/client/src/components/Footer.jsx",[],"/home/kariman/Documents/nodejs projects/ecommerce/client/src/pages/ProductList.jsx",["106"],"import styled from \"styled-components\";\nimport Announcement from \"../components/Announcement\";\nimport Navbar from \"../components/Navbar\";\nimport Newsletter from \"../components/Newsletter\";\nimport Products from \"../components/Products\";\nimport Footer from \"../components/Footer\";\nimport { useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\n\nconst Container = styled.div``;\nconst Title = styled.h1`\n  margin: 20px;\n`;\nconst FilterContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nconst Filter = styled.div`\n  margin: 20px;\n`;\n\nconst FilterText = styled.span`\n  font-size: 20px;\n  font-weight: 600;\n`;\n\nconst Select = styled.select`\n  padding: 10px;\n  margin-right: 20px;\n  outline: none;\n  margin-left: 5px;\n`;\n\nconst Option = styled.option``;\n\nfunction ProductList() {\n  const [filters, setFilters] = useState({});\n  const [sort, setSort] = useState(\"newest\");\n  const location = useLocation();\n  const cat = location.pathname.split(\"/\")[2];\n\n  const handleFilters = (e) => {\n    const value = e.target.value;\n    setFilters({\n      ...filters,\n      [e.target.name]: value,\n    });\n  };\n\n  return (\n    <Container>\n      <Announcement />\n      <Navbar />\n      <Title>{cat}</Title>\n      <FilterContainer>\n        <Filter>\n          <FilterText>Filter Products:</FilterText>\n          <Select name=\"color\" onChange={handleFilters}>\n            <Option disabled>Color</Option>\n            <Option>white</Option>\n            <Option>black</Option>\n            <Option>red</Option>\n            <Option>blue</Option>\n            <Option>yellow</Option>\n            <Option>green</Option>\n          </Select>\n          <Select name=\"size\" onChange={handleFilters}>\n            <Option disabled>Size</Option>\n            <Option>XS</Option>\n            <Option>S</Option>\n            <Option>M</Option>\n            <Option>L</Option>\n            <Option>XL</Option>\n          </Select>\n        </Filter>\n        <Filter>\n          <FilterText>Sort Products:</FilterText>\n          <Select onChange={(e) => setSort(e.tar)}>\n            <Option value=\"newest\">Newest</Option>\n            <Option value=\"asc\">Price (asc)</Option>\n            <Option value=\"desc\">Price (desc)</Option>\n          </Select>\n        </Filter>\n      </FilterContainer>\n      <Products cat={cat} filters={filters} sort={sort} />\n      <Newsletter />\n      <Footer />\n    </Container>\n  );\n}\n\nexport default ProductList;\n","/home/kariman/Documents/nodejs projects/ecommerce/client/src/pages/Product.jsx",[],"/home/kariman/Documents/nodejs projects/ecommerce/client/src/pages/Register.jsx",[],"/home/kariman/Documents/nodejs projects/ecommerce/client/src/pages/Login.jsx",[],"/home/kariman/Documents/nodejs projects/ecommerce/client/src/pages/Cart.jsx",["107"],"import { Add, Remove } from \"@material-ui/icons\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Announcement from \"../components/Announcement\";\nimport Footer from \"../components/Footer\";\nimport Navbar from \"../components/Navbar\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport { useEffect, useState } from \"react\";\nimport { userRequest } from \"../services/requestMethods\";\nimport { useHistory } from \"react-router\";\n\nconst KEY = process.env.REACT_APP_STRIPE_KEY;\n\nconst Container = styled.div``;\n\nconst Wrapper = styled.div`\n  padding: 20px;\n`;\n\nconst Title = styled.h1`\n  font-weight: 300;\n  text-align: center;\n`;\n\nconst Top = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 20px;\n`;\n\nconst TopButton = styled.button`\n  padding: 10px;\n  font-weight: 600;\n  cursor: pointer;\n  border: ${(props) => props.type === \"filled\" && \"none\"};\n  background-color: ${(props) =>\n    props.type === \"filled\" ? \"black\" : \"transparent\"};\n  color: ${(props) => props.type === \"filled\" && \"white\"};\n`;\n\nconst TopTexts = styled.div`\n`;\nconst TopText = styled.span`\n  text-decoration: underline;\n  cursor: pointer;\n  margin: 0px 10px;\n`;\n\nconst Bottom = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Info = styled.div`\n  flex: 3;\n`;\n\nconst Product = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst ProductDetail = styled.div`\n  flex: 2;\n  display: flex;\n`;\n\nconst Image = styled.img`\n  width: 200px;\n`;\n\nconst Details = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\n\nconst ProductName = styled.span``;\n\nconst ProductId = styled.span``;\n\nconst ProductColor = styled.div`\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background-color: ${(props) => props.color};\n`;\n\nconst ProductSize = styled.span``;\n\nconst PriceDetail = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst ProductAmountContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nconst ProductAmount = styled.div`\n  font-size: 24px;\n  margin: 5px;\n`;\n\nconst ProductPrice = styled.div`\n  font-size: 30px;\n  font-weight: 200;\n`;\n\nconst Hr = styled.hr`\n  background-color: #eee;\n  border: none;\n  height: 1px;\n`;\n\nconst Summary = styled.div`\n  flex: 1;\n  border: 0.5px solid lightgray;\n  border-radius: 10px;\n  padding: 20px;\n  height: 50vh;\n`;\n\nconst SummaryTitle = styled.h1`\n  font-weight: 200;\n`;\n\nconst SummaryItem = styled.div`\n  margin: 30px 0px;\n  display: flex;\n  justify-content: space-between;\n  font-weight: ${(props) => props.type === \"total\" && \"500\"};\n  font-size: ${(props) => props.type === \"total\" && \"24px\"};\n`;\n\nconst SummaryItemText = styled.span``;\n\nconst SummaryItemPrice = styled.span``;\n\nconst Button = styled.button`\n  width: 100%;\n  padding: 10px;\n  background-color: black;\n  color: white;\n  font-weight: 600;\n`;\n\nconst Cart = () => {\n  const cart = useSelector((state) => state.cart);\n  const [stripeToken, setStripeToken] = useState(null);\n  const history = useHistory();\n\n  const onToken = (token) => {\n    setStripeToken(token);\n  };\n\n  useEffect(() => {\n    const makeRequest = async () => {\n      try {\n        const res = await userRequest.post(\"/checkout/payment\", {\n          tokenId: stripeToken.id,\n          amount: 500,\n        });\n        history.push(\"/success\", {\n          stripeData: res.data,\n          products: cart, });\n      } catch {}\n    };\n    stripeToken && makeRequest();\n  }, [stripeToken, cart.total, history]);\n  return (\n    <Container>\n      <Navbar />\n      <Announcement />\n      <Wrapper>\n        <Title>YOUR BAG</Title>\n        <Top>\n          <TopButton>CONTINUE SHOPPING</TopButton>\n          <TopTexts>\n            <TopText>Shopping Bag(2)</TopText>\n            <TopText>Your Wishlist (0)</TopText>\n          </TopTexts>\n          <TopButton type=\"filled\">CHECKOUT NOW</TopButton>\n        </Top>\n        <Bottom>\n          <Info>\n            {cart.products.map((product) => (\n              <Product key={product._id}>\n                <ProductDetail>\n                  <Image src={product.img} />\n                  <Details>\n                    <ProductName>\n                      <b>Product:</b> {product.title}\n                    </ProductName>\n                    <ProductId>\n                      <b>ID:</b> {product._id}\n                    </ProductId>\n                    <ProductColor color={product.color} />\n                    <ProductSize>\n                      <b>Size:</b> {product.size}\n                    </ProductSize>\n                  </Details>\n                </ProductDetail>\n                <PriceDetail>\n                  <ProductAmountContainer>\n                    <Add />\n                    <ProductAmount>{product.quantity}</ProductAmount>\n                    <Remove />\n                  </ProductAmountContainer>\n                  <ProductPrice>\n                    $ {product.price * product.quantity}\n                  </ProductPrice>\n                </PriceDetail>\n              </Product>\n            ))}\n            <Hr />\n          </Info>\n          <Summary>\n            <SummaryTitle>ORDER SUMMARY</SummaryTitle>\n            <SummaryItem>\n              <SummaryItemText>Subtotal</SummaryItemText>\n              <SummaryItemPrice>$ {cart.total}</SummaryItemPrice>\n            </SummaryItem>\n            <SummaryItem>\n              <SummaryItemText>Estimated Shipping</SummaryItemText>\n              <SummaryItemPrice>$ 5.90</SummaryItemPrice>\n            </SummaryItem>\n            <SummaryItem>\n              <SummaryItemText>Shipping Discount</SummaryItemText>\n              <SummaryItemPrice>$ -5.90</SummaryItemPrice>\n            </SummaryItem>\n            <SummaryItem type=\"total\">\n              <SummaryItemText>Total</SummaryItemText>\n              <SummaryItemPrice>$ {cart.total}</SummaryItemPrice>\n            </SummaryItem>\n            <StripeCheckout\n              name=\"Lama Shop\"\n              image=\"https://avatars.githubusercontent.com/u/1486366?v=4\"\n              billingAddress\n              shippingAddress\n              description={`Your total is $${cart.total}`}\n              amount={cart.total * 100}\n              token={onToken}\n              stripeKey={KEY}\n            >\n              <Button>CHECKOUT NOW</Button>\n            </StripeCheckout>\n          </Summary>\n        </Bottom>\n      </Wrapper>\n      <Footer />\n    </Container>\n  );\n};\n\nexport default Cart;\n","/home/kariman/Documents/nodejs projects/ecommerce/client/src/services/requestMethods.js",[],"/home/kariman/Documents/nodejs projects/ecommerce/client/src/redux/store.js",[],"/home/kariman/Documents/nodejs projects/ecommerce/client/src/redux/cartRedux.js",[],"/home/kariman/Documents/nodejs projects/ecommerce/client/src/pages/Success.jsx",[],"/home/kariman/Documents/nodejs projects/ecommerce/client/src/redux/userRedux.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":25,"column":38,"nodeType":"114","messageId":"115","endLine":25,"endColumn":40},{"ruleId":"112","severity":1,"message":"113","line":26,"column":39,"nodeType":"114","messageId":"115","endLine":26,"endColumn":41},{"ruleId":"112","severity":1,"message":"113","line":83,"column":19,"nodeType":"114","messageId":"115","endLine":83,"endColumn":21},{"ruleId":"112","severity":1,"message":"113","line":87,"column":19,"nodeType":"114","messageId":"115","endLine":87,"endColumn":21},{"ruleId":"116","severity":1,"message":"117","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":25},{"ruleId":"116","severity":1,"message":"120","line":8,"column":10,"nodeType":"118","messageId":"119","endLine":8,"endColumn":19},{"ruleId":"121","severity":1,"message":"122","line":177,"column":6,"nodeType":"123","endLine":177,"endColumn":40,"suggestions":"124"},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'popularProducts' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cart'. Either include it or remove the dependency array.","ArrayExpression",["127"],"no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},"Update the dependencies array to be: [stripeToken, cart.total, history, cart]",{"range":"130","text":"131"},[3611,3645],"[stripeToken, cart.total, history, cart]"]